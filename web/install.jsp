<%@ page contentType="text/html" pageEncoding="UTF-8" %>
<%@ page import = "java.sql.*" %>
<%@ page import = "model.entities.*" %>
<%@ page import = "autenticacio.*" %>
<%@ page import = "java.util.*" %>
<!DOCTYPE html>
<html>
    <head>
        <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
        <title>Database SQL Load</title>
    </head>
    <style>
        .error {
            color: red;
        }
        pre {
            color: green;
        }
    </style>
    <body>
        <h2>Database SQL Load</h2>
        <%
            /* How to customize:
             * 1. Update the database name on dbname.
             * 2. Create the list of tables, under tablenames[].
             * 3. Create the list of table definition, under tables[].
             * 4. Create the data into the above table, under data[]. 
             * 
             * If there is any problem, it will exit at the very first error.
             */
            String dbname = "homework1";
            String schema = "ROOT";
            Class.forName("org.apache.derby.jdbc.ClientDriver");
            /* this will generate database if not exist */
            Connection con = DriverManager.getConnection("jdbc:derby://localhost:1527/" + dbname, "root", "root");
            Statement stmt = con.createStatement();
            
            credentialsClient c1 = new credentialsClient();
            c1.setUsername("cesc");
            
            String alphaNumericString="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";
            int cmpt = 0;
            StringBuilder stringb = new StringBuilder();
            while(cmpt<32){
                int posRand=(int)(Math.random()*alphaNumericString.length());
                stringb.append(alphaNumericString.charAt(posRand));
                cmpt++;
            }
            
            String randomPasswd = stringb.toString();
            c1.setPassword(randomPasswd);
            c1.setEmail("77792731-S@estudiants.urv.cat");
            
            out.println("<pre> Password for " + c1.getUsername() + " is "+ c1.getPassword() +" <pre>");
            
            credentialsClient c2 = new credentialsClient();
            
            cmpt = 0;
            stringb = new StringBuilder();
            while(cmpt<32){
                int posRand=(int)(Math.random()*alphaNumericString.length());
                stringb.append(alphaNumericString.charAt(posRand));
                cmpt++;
            }
            randomPasswd=stringb.toString();
            c2.setUsername("aleix");
            c2.setPassword(randomPasswd);
            c2.setEmail("39925731-P@estudiants.urv.cat");
            
            out.println("<pre> Password for " + c2.getUsername() + " is "+ c2.getPassword() +" <pre>");
            
            /* inserting data */
            /* you have to exclude the id autogenerated from the list of columns if you have use it. */
            String authorizedUsers[] = new String[]{
              "INSERT INTO " + schema +".CREDENTIALSCLIENT (USERNAME,AUTENTICAT,E_MAIL,PASSWORD) VALUES ('aleix',0,'39925731-P@estudiants.urv.cat','"+c2.getCryptedPassword()+"')",
              "INSERT INTO " + schema +".CREDENTIALSCLIENT (USERNAME,AUTENTICAT,E_MAIL,PASSWORD) VALUES ('cesc',0,'77792731-S@estudiants.urv.cat','"+c1.getCryptedPassword()+"')",
            };
            
            ResultSet rsUs;
            Boolean trobat = false;
            
            for(String user : authorizedUsers){
                
                trobat = false;
                rsUs = stmt.executeQuery("SELECT E_MAIL FROM CREDENTIALSCLIENT");
                while(rsUs.next()){
                    if (user.contains(String.valueOf(rsUs.getString("E_MAIL")))){
                        trobat = true;
                    }
                }
                if (!trobat){
                    if (stmt.executeUpdate(user)<=0) {
                        out.println("<span class='error'>Error inserting data: " + user + "</span>");
                        return;
                    }
                    out.println("<pre> -> " + user + "<pre>");
                }
            }
            
            
            String dataLlogater[] = new String[]{
                "INSERT INTO " + schema + ".LLOGATER (ID, COGNOM_LLOGATER,NIF,EDAT_LLOGATER,FUMADOR,NOM_LLOGATER,SEXE,TEMASCOTES) VALUES (NEXT VALUE FOR LLOGATER_GEN,'Sanchez','25789635-K',18,0,'Marc','HOME',1)",
                "INSERT INTO " + schema + ".LLOGATER (ID, COGNOM_LLOGATER,NIF,EDAT_LLOGATER,FUMADOR,NOM_LLOGATER,SEXE,TEMASCOTES)  VALUES (NEXT VALUE FOR LLOGATER_GEN,'Kornikov','14576984-M',70,1,'Joan','HOME',0)",
                "INSERT INTO " + schema + ".LLOGATER (ID, COGNOM_LLOGATER,NIF,EDAT_LLOGATER,FUMADOR,NOM_LLOGATER,SEXE,TEMASCOTES) VALUES (NEXT VALUE FOR LLOGATER_GEN,'Casanova','33452521-P',42,0,'Pere','HOME',1)",
                "INSERT INTO " + schema + ".LLOGATER (ID, COGNOM_LLOGATER,NIF,EDAT_LLOGATER,FUMADOR,NOM_LLOGATER,SEXE,TEMASCOTES) VALUES (NEXT VALUE FOR LLOGATER_GEN,'Perez','2143657-O',24,0,'Marta','DONA',1)",
                "INSERT INTO " + schema + ".LLOGATER (ID, COGNOM_LLOGATER,NIF,EDAT_LLOGATER,FUMADOR,NOM_LLOGATER,SEXE,TEMASCOTES) VALUES (NEXT VALUE FOR LLOGATER_GEN,'Fernandez','36955521-X',60,0,'Lidia','DONA',1)",
                "INSERT INTO " + schema + ".LLOGATER (ID, COGNOM_LLOGATER,NIF,EDAT_LLOGATER,FUMADOR,NOM_LLOGATER,SEXE,TEMASCOTES) VALUES (NEXT VALUE FOR LLOGATER_GEN,'Pujades','35955521-V',32,0,'Natalia','DONA',0)",
                "INSERT INTO " + schema + ".LLOGATER (ID, COGNOM_LLOGATER,NIF,EDAT_LLOGATER,FUMADOR,NOM_LLOGATER,SEXE,TEMASCOTES) VALUES (NEXT VALUE FOR LLOGATER_GEN,'Llobregat','56322214-E',30,1,'Manuela','DONA',0)",              
            };
            ResultSet rsLlo;
            for (String datum : dataLlogater) {
                trobat = false;
                rsLlo = stmt.executeQuery("SELECT NIF FROM LLOGATER");
                while(rsLlo.next()){
                    if (datum.contains(String.valueOf(rsLlo.getString("NIF")))){
                        trobat = true;
                    }
                }
                
                if (!trobat){
                    if (stmt.executeUpdate(datum)<=0){
                        out.println("<span class='error'>Error inserting data: " + datum + "</span>");
                        return;
                    }
                    out.println("<pre> -> " + datum + "<pre>");
                }
            }
            
            //Aqui hauriem de recuperar d'alguna manera la columna dels id dels paios i assignar-li un a cadascun.... per aixo ho he separat
            List<String> idsLlogaters = new ArrayList<String>();
            ResultSet result = stmt.executeQuery("SELECT ID FROM LLOGATER");
            while(result.next()){
                idsLlogaters.add(String.valueOf(result.getInt("ID")));
            }
            out.println("Ids de llogaters:");
            for(String s : idsLlogaters)
            {
                out.println("<pre> -> " + s + "<pre>");
            }
           
            String dataHabitacions[] = new String[]{
              
                "INSERT INTO " + schema + ".HABITACIO (HABITACIO_ID, ADREÇA, CIUTAT, DESCRIPCIO,NOM_HABITACIO,OCUPADA,PREU_MES,TIPUS, IMATGE_URL ,FUMADOR,MASCOTES, RANGEDATMAX,RANGEDATMIN,SEXE,LLOGATER_ID) VALUES (NEXT VALUE FOR HABITACIO_GEN,'C/Mossen martí 33 3r 3a', 'valls','Room in the city center, very well connected. It has a supermarket nearby and very nice views. Habitacio amb molta llum, sembla Lloret.','NOM HABITACIO 1',1,500.10,'MOBLADA','Images/hab1.jpg',0,1,40,20,'UNISEX',"+idsLlogaters.get(3)+")", 
                "INSERT INTO " + schema + ".HABITACIO (HABITACIO_ID, ADREÇA, CIUTAT, DESCRIPCIO,NOM_HABITACIO,OCUPADA,PREU_MES,TIPUS, IMATGE_URL ,FUMADOR,MASCOTES, RANGEDATMAX,RANGEDATMIN,SEXE,LLOGATER_ID) VALUES (NEXT VALUE FOR HABITACIO_GEN, 'C/Major 72','montferri','Suite with double bed and jacuzzi for 2 people at the foot of the bed. Completely renovated with modern design. Option of extra bed.','NOM HABITACIO 2',1,1124.15,'SIMPLE','Images/hab2.jpg',1,1,60,18,'HOME',"+idsLlogaters.get(0)+")", 
                "INSERT INTO " + schema + ".HABITACIO (HABITACIO_ID, ADREÇA, CIUTAT, DESCRIPCIO,NOM_HABITACIO,OCUPADA,PREU_MES,TIPUS, IMATGE_URL ,FUMADOR,MASCOTES, RANGEDATMAX,RANGEDATMIN,SEXE,LLOGATER_ID) VALUES (NEXT VALUE FOR HABITACIO_GEN, 'Avda. Paisos Catalans 12', 'reus', 'Romantic and nice Suite in Reus, has a living room and bedroom with 2x2m bed. Ideal for a relaxing break as a couple. Complete bathroom, with whirlpool and separate shower, hairdryer, magnifying mirror and Rituals amenities.','NOM HABITACIO 3',1,469.24,'DOBLE','Images/hab3.jpg',0,0,80,20,'DONA',"+idsLlogaters.get(5)+")",
                "INSERT INTO " + schema + ".HABITACIO (HABITACIO_ID, ADREÇA, CIUTAT, DESCRIPCIO,NOM_HABITACIO,OCUPADA,PREU_MES,TIPUS, IMATGE_URL ,FUMADOR,MASCOTES, RANGEDATMAX,RANGEDATMIN,SEXE,LLOGATER_ID) VALUES (NEXT VALUE FOR HABITACIO_GEN, 'Rambla nova 5', 'tarragona','Feel the sea breeze while watching from your private balcony the beautiful beaches of Tarragona. It offers magnificent premium sea view rooms (30 m2 / 323 sq. Ft.) With extraordinary frontal views of the Mediterranean Sea.','NOM HABITACIO 4',1,99.99,'EXTERIOR','Images/hab4.jpg',1,1,70,2,'UNISEX',"+idsLlogaters.get(6)+")",
                "INSERT INTO " + schema + ".HABITACIO (HABITACIO_ID, ADREÇA, CIUTAT, DESCRIPCIO,NOM_HABITACIO,OCUPADA,PREU_MES,TIPUS, IMATGE_URL ,FUMADOR,MASCOTES, RANGEDATMAX,RANGEDATMIN,SEXE,LLOGATER_ID) VALUES (NEXT VALUE FOR HABITACIO_GEN, 'C/Rafael de Casanova', 'valls','See the natural beauty of Valls from these warm, elegant and bright rooms. We put at your disposal rooms with an unbeatable view of the famous Miramar Mountain, with great landscape and natural wealth.','NOM HABITACIO 5',1,1000.90,'SIMPLE','Images/hab5.jpg',1,0,90,30,'UNISEX',"+idsLlogaters.get(1)+")",
                "INSERT INTO " + schema + ".HABITACIO (HABITACIO_ID, ADREÇA, CIUTAT, DESCRIPCIO,NOM_HABITACIO,OCUPADA,PREU_MES,TIPUS, IMATGE_URL ,FUMADOR,MASCOTES, RANGEDATMAX,RANGEDATMIN,SEXE,LLOGATER_ID) VALUES (NEXT VALUE FOR HABITACIO_GEN, 'Avda. Catalunya 2', 'vallmoll','Room prepared with more space so you can enjoy a comfortable holiday as a couple. It has a large 2x2m King Bed. With full bathroom with bathtub, hairdryer, cosmetic mirror and amenities.','NOM HABITACIO 6',0,120,'INTERIOR','Images/hab6.jpg',1,1,99,10,'UNISEX',null)"
                
            };
            ResultSet rsHab;
            for (String datum : dataHabitacions) {
                trobat = false;
                rsHab = stmt.executeQuery("SELECT ADREÇA FROM HABITACIO");
                while(rsHab.next()){
                    if (datum.contains(String.valueOf(rsHab.getString("ADREÇA")))){
                        trobat = true;
                    }
                }
                if (!trobat){
                    if (stmt.executeUpdate(datum)<0){
                        out.println("<span class='error'>Error inserting data: " + datum + "</span>");
                        return;
                    }
                    out.println("<pre> -> " + datum + "<pre>");
                }
            }
                
            List<String> idsHabitacions = new ArrayList<String>();
            ResultSet resu = stmt.executeQuery("SELECT HABITACIO_ID FROM HABITACIO");
            while(resu.next()){
                idsLlogaters.add(String.valueOf(resu.getInt("HABITACIO_ID")));
            }
            out.println("ids de habitacions:");
            for(String s : idsLlogaters)
            {
                out.println("<pre> -> " + s + "<pre>");
            }
        %>
        <button onclick="window.location='<%=request.getSession().getServletContext().getContextPath()%>'">Go home</button>
    </body>
</html>
